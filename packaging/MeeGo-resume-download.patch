diff -uNr libzypp-8.10.2/zypp/Fetcher.cc libzypp-8.10.2.new/zypp/Fetcher.cc
--- libzypp-8.10.2/zypp/Fetcher.cc	2011-03-02 14:25:34.650394373 +0800
+++ libzypp-8.10.2.new/zypp/Fetcher.cc	2011-02-26 15:41:36.414440092 +0800
@@ -550,13 +550,19 @@
       // try to get the file from the net
       try
       {
-        Pathname tmp_file = media.provideFile(resource, resource.optional() ? MediaSetAccess::PROVIDE_NON_INTERACTIVE : MediaSetAccess::PROVIDE_DEFAULT, deltafile );
-
         Pathname dest_full_path = dest_dir + resource.filename();
+        Pathname tmp_file;
 
         if ( assert_dir( dest_full_path.dirname() ) != 0 )
               ZYPP_THROW( Exception("Can't create " + dest_full_path.dirname().asString()));
-        if ( filesystem::hardlinkCopy( tmp_file, dest_full_path ) != 0 )
+
+        if ( deltafile.asString() == "" )
+          tmp_file = media.provideFile(resource, resource.optional() ? MediaSetAccess::PROVIDE_NON_INTERACTIVE : MediaSetAccess::PROVIDE_DEFAULT, dest_full_path );
+        else 
+        {
+          tmp_file = media.provideFile(resource, resource.optional() ? MediaSetAccess::PROVIDE_NON_INTERACTIVE : MediaSetAccess::PROVIDE_DEFAULT, deltafile );
+        }
+        if ( ! PathInfo(dest_full_path).isExist() && filesystem::hardlinkCopy( tmp_file, dest_full_path ) != 0 )
         {
           if ( ! PathInfo(tmp_file).isExist() )
               ERR << tmp_file << " does not exist" << endl;
diff -uNr libzypp-8.10.2/zypp/media/MediaCurl.cc libzypp-8.10.2.new/zypp/media/MediaCurl.cc
--- libzypp-8.10.2/zypp/media/MediaCurl.cc	2011-03-02 14:25:34.651393897 +0800
+++ libzypp-8.10.2.new/zypp/media/MediaCurl.cc	2011-03-02 14:24:29.578519071 +0800
@@ -34,6 +34,7 @@
 #include <sys/types.h>
 #include <sys/stat.h>
 #include <sys/mount.h>
+#include <sys/stat.h>
 #include <errno.h>
 #include <dirent.h>
 #include <unistd.h>
@@ -1188,37 +1189,63 @@
 void MediaCurl::doGetFileCopy( const Pathname & filename , const Pathname & target, callback::SendReport<DownloadProgressReport> & report, RequestOptions options ) const
 {
     Pathname dest = target.absolutename();
+    string destNew;
+    FILE *file = NULL;
     if( assert_dir( dest.dirname() ) )
     {
       DBG << "assert_dir " << dest.dirname() << " failed" << endl;
       Url url(getFileUrl(filename));
       ZYPP_THROW( MediaSystemException(url, "System error on " + dest.dirname().asString()) );
     }
-    string destNew = target.asString() + ".new.zypp.XXXXXX";
-    char *buf = ::strdup( destNew.c_str());
-    if( !buf)
+    if ( deltafile().asString() != "" )
     {
-      ERR << "out of memory for temp file name" << endl;
-      Url url(getFileUrl(filename));
-      ZYPP_THROW(MediaSystemException(url, "out of memory for temp file name"));
-    }
+      destNew = deltafile().asString();
+      Pathname target_path(destNew.c_str());
+      struct stat file_info;
+      curl_off_t file_off = -1 ;
+
+      file = ::fopen( destNew.c_str(), "ab+" );
+      if ( !file ) {
+        filesystem::unlink( destNew );
+        ERR << "fopen failed for file '" << destNew << "'" << endl;
+        ZYPP_THROW(MediaWriteException(destNew));
+      }
+      if ( stat(destNew.c_str(), &file_info) == 0 )
+      {
+         file_off = file_info.st_size;
+         curl_easy_setopt(_curl, CURLOPT_RESUME_FROM_LARGE, file_off);
+      }
 
-    int tmp_fd = ::mkstemp( buf );
-    if( tmp_fd == -1)
+    }
+    else
     {
+      destNew = target.asString() + ".new.zypp.XXXXXX";
+      char *buf = ::strdup( destNew.c_str());
+      if( !buf)
+      {
+        ERR << "out of memory for temp file name" << endl;
+        Url url(getFileUrl(filename));
+        ZYPP_THROW(MediaSystemException(url, "out of memory for temp file name"));
+      }
+
+  
+      int tmp_fd = ::mkstemp( buf );
+      if( tmp_fd == -1)
+      {
+        free( buf);
+        ERR << "mkstemp failed for file '" << destNew << "'" << endl;
+        ZYPP_THROW(MediaWriteException(destNew));
+      }
+      destNew = buf;
       free( buf);
-      ERR << "mkstemp failed for file '" << destNew << "'" << endl;
-      ZYPP_THROW(MediaWriteException(destNew));
-    }
-    destNew = buf;
-    free( buf);
 
-    FILE *file = ::fdopen( tmp_fd, "w" );
-    if ( !file ) {
-      ::close( tmp_fd);
-      filesystem::unlink( destNew );
-      ERR << "fopen failed for file '" << destNew << "'" << endl;
-      ZYPP_THROW(MediaWriteException(destNew));
+      file = ::fdopen( tmp_fd, "w" );
+      if ( !file ) {
+        ::close( tmp_fd);
+        filesystem::unlink( destNew );
+        ERR << "fopen failed for file '" << destNew << "'" << endl;
+        ZYPP_THROW(MediaWriteException(destNew));
+      }
     }
 
     DBG << "dest: " << dest << endl;
@@ -1282,7 +1309,7 @@
         ZYPP_THROW(MediaWriteException(destNew));
       }
       // move the temp file into dest
-      if ( rename( destNew, dest ) != 0 ) {
+    if ( deltafile().asString() == "" && rename( destNew, dest ) != 0 ) {
         ERR << "Rename failed" << endl;
         ZYPP_THROW(MediaWriteException(dest));
       }
diff -uNr libzypp-8.10.2/zypp/media/MediaMultiCurl.cc libzypp-8.10.2.new/zypp/media/MediaMultiCurl.cc
--- libzypp-8.10.2/zypp/media/MediaMultiCurl.cc	2011-03-02 14:25:34.652393815 +0800
+++ libzypp-8.10.2.new/zypp/media/MediaMultiCurl.cc	2011-02-26 15:41:36.432439678 +0800
@@ -14,6 +14,7 @@
 #include <sys/types.h>
 #include <signal.h>
 #include <sys/wait.h>
+#include <sys/stat.h>
 #include <netdb.h>
 #include <arpa/inet.h>
 
@@ -1195,37 +1196,61 @@
 void MediaMultiCurl::doGetFileCopy( const Pathname & filename , const Pathname & target, callback::SendReport<DownloadProgressReport> & report, RequestOptions options ) const
 {
   Pathname dest = target.absolutename();
+  string destNew;
+  FILE *file = NULL;
   if( assert_dir( dest.dirname() ) )
   {
     DBG << "assert_dir " << dest.dirname() << " failed" << endl;
     Url url(getFileUrl(filename));
     ZYPP_THROW( MediaSystemException(url, "System error on " + dest.dirname().asString()) );
   }
-  string destNew = target.asString() + ".new.zypp.XXXXXX";
-  char *buf = ::strdup( destNew.c_str());
-  if( !buf)
+  if ( deltafile().asString() != "" )
   {
-    ERR << "out of memory for temp file name" << endl;
-    Url url(getFileUrl(filename));
-    ZYPP_THROW(MediaSystemException(url, "out of memory for temp file name"));
+    destNew = deltafile().asString();
+    Pathname target_path(destNew.c_str());
+    struct stat file_info;
+    curl_off_t file_off = -1 ;
+
+    file = ::fopen( destNew.c_str(), "ab+" );
+    if ( !file ) {
+      filesystem::unlink( destNew );
+      ERR << "fopen failed for file '" << destNew << "'" << endl;
+      ZYPP_THROW(MediaWriteException(destNew));
+    }
+    if ( stat(destNew.c_str(), &file_info) == 0 )
+    {
+       file_off = file_info.st_size;
+       curl_easy_setopt(_curl, CURLOPT_RESUME_FROM_LARGE, file_off);
+    }
   }
-
-  int tmp_fd = ::mkstemp( buf );
-  if( tmp_fd == -1)
+  else
   {
+    destNew = target.asString() + ".new.zypp.XXXXXX";
+    char *buf = ::strdup( destNew.c_str());
+    if( !buf)
+    {
+      ERR << "out of memory for temp file name" << endl;
+      Url url(getFileUrl(filename));
+      ZYPP_THROW(MediaSystemException(url, "out of memory for temp file name"));
+    }
+
+    int tmp_fd = ::mkstemp( buf );
+    if( tmp_fd == -1)
+    {
+      free( buf);
+      ERR << "mkstemp failed for file '" << destNew << "'" << endl;
+      ZYPP_THROW(MediaWriteException(destNew));
+    }
+    destNew = buf;
     free( buf);
-    ERR << "mkstemp failed for file '" << destNew << "'" << endl;
-    ZYPP_THROW(MediaWriteException(destNew));
-  }
-  destNew = buf;
-  free( buf);
 
-  FILE *file = ::fdopen( tmp_fd, "w" );
-  if ( !file ) {
-    ::close( tmp_fd);
-    filesystem::unlink( destNew );
-    ERR << "fopen failed for file '" << destNew << "'" << endl;
-    ZYPP_THROW(MediaWriteException(destNew));
+    file = ::fdopen( tmp_fd, "w" );
+    if ( !file ) {
+      ::close( tmp_fd);
+      filesystem::unlink( destNew );
+      ERR << "fopen failed for file '" << destNew << "'" << endl;
+      ZYPP_THROW(MediaWriteException(destNew));
+    }
   }
   DBG << "dest: " << dest << endl;
   DBG << "temp: " << destNew << endl;
@@ -1241,8 +1266,6 @@
     curl_easy_setopt(_curl, CURLOPT_TIMECONDITION, CURL_TIMECOND_NONE);
     curl_easy_setopt(_curl, CURLOPT_TIMEVALUE, 0L);
   }
-  // change header to include Accept: metalink
-  curl_easy_setopt(_curl, CURLOPT_HTTPHEADER, _customHeadersMetalink);
   try
     {
       MediaCurl::doGetFileCopyFile(filename, dest, file, report, options);
@@ -1358,7 +1381,7 @@
       ERR << "Fclose failed for file '" << destNew << "'" << endl;
       ZYPP_THROW(MediaWriteException(destNew));
     }
-  if ( rename( destNew, dest ) != 0 )
+  if ( deltafile().asString() == "" && rename( destNew, dest ) != 0 )
     {
       ERR << "Rename failed" << endl;
       ZYPP_THROW(MediaWriteException(dest));
