/**

\page plugin-commit Commit plugin

\author Michael Andres <ma@suse.de>

<HR><!-- ====================================================================== -->
\section intro Introduction

This is a statefull plugin executed during \ref zypp::ZYpp::commit. At the beginning of a commit all plugins found in \c /usr/lib/zypp/plugins/commit are launched. The plugins will receive messages as commit proceeds. Unless otherwise specified messages received need to be confirmed by sending an \c ACC message. Sending back an \c ERROR message execution of the plugin will be canceled.

If you have e.g. \c zypp-plugin-python installed a basic commit plugin could look like this:

\verbatim
#!/usr/bin/env python
#
# zypp commit plugin
#
import os
import sys
from zypp_plugin import Plugin

class MyPlugin(Plugin):

  def PLUGINBEGIN(self, headers, body):
    # commit is going to start.
    self.ack()

  def PLUGINEND(self, headers, body):
    # commit ended
    self.ack()

plugin = MyPlugin()
plugin.main()
\endverbatim

\see \ref plugin-writing

<HR><!-- ====================================================================== -->
\section pluginbegin PLUGINBEGIN
\verbatim
PLUGINBEGIN

^@
\endverbatim
Sent as 1st message after the plugin was launched. Prepare your plugin and send an \c ACC message when you are done. Commit will start after all plugins are initialized.


<HR><!-- ====================================================================== -->
\section pluginend PLUGINEND
\verbatim
PLUGINEND

^@
\endverbatim
This message is sent at the end of commit. You should receive this message even if commit was aborted by some unexpected exception.

*/
